{"version":3,"file":"threerollupstarter.js","sources":["../src/thirdparty/TrackballControls.js","../src/EventManager.js","../src/postprocessing/base/Pass.js","../src/postprocessing/base/MaskPass.js","../src/postprocessing/base/ShaderPass.js","../src/postprocessing/base/CopyShader.js","../src/postprocessing/base/EffectComposer.js","../src/postprocessing/base/RenderPass.js","../src/postprocessing/unrealBloom/LuminosityHighPassShader.js","../src/postprocessing/unrealBloom/UnrealBloomPass.js","../src/postprocessing/sobel/LuminosityShader.js","../src/postprocessing/sobel/SobelOperatorShader.js","../src/postprocessing/noChange/NoChange.js","../src/postprocessing/PixelShader/PixelShader.js","../src/postprocessing/FXAA/FXAAShader.js","../src/postprocessing/blur/BlurShader.js","../src/postprocessing/noise/NoiseShader.js","../src/postprocessing/blurRandom/BlurRandomShader.js","../src/ThreeContext.js","../src/main.js"],"sourcesContent":["/*\n * @author Eberhard Graether / http://egraether.com/\n * @author Mark Lundin   / http://mark-lundin.com\n * @author Simone Manini / http://daron1337.github.io\n * @author Luca Antiga   / http://lantiga.github.io\n */\n\n\nimport * as THREE from 'three'\n\n/*\n* ES6 adapted source from the example folder of THREEJS (because there is no proper repo for it)\n* Enables mouse control (pan, zoom, rotation)\n*/\nconst TrackballControls = function (object, domElement) {\n  const _this = this\n  const STATE = {\n    NONE: -1, ROTATE: 0, ZOOM: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_ZOOM_PAN: 4,\n  }\n\n  this.object = object\n  this.domElement = (domElement !== undefined) ? domElement : document\n\n  // API\n\n  this.enabled = true\n\n  this.screen = {\n    left: 0, top: 0, width: 0, height: 0,\n  }\n\n  this.rotateSpeed = 1.0\n  this.zoomSpeed = 1.2\n  this.panSpeed = 0.3\n\n  this.noRotate = false\n  this.noZoom = false\n  this.noPan = false\n\n  this.staticMoving = false\n  this.dynamicDampingFactor = 0.5\n\n  this.minDistance = 0\n  this.maxDistance = Infinity\n\n  this.keys = [65 /* A */, 83 /* S */, 68]\n\n  // internals\n\n  this.target = new THREE.Vector3()\n\n  const EPS = 0.000001\n\n  const lastPosition = new THREE.Vector3()\n\n  let _state = STATE.NONE\n\n\n  let _prevState = STATE.NONE\n\n\n  const _eye = new THREE.Vector3()\n\n\n  const _movePrev = new THREE.Vector2()\n\n\n  const _moveCurr = new THREE.Vector2()\n\n\n  const _lastAxis = new THREE.Vector3()\n\n\n  let _lastAngle = 0\n\n\n  const _zoomStart = new THREE.Vector2()\n\n\n  const _zoomEnd = new THREE.Vector2()\n\n\n  let _touchZoomDistanceStart = 0\n\n\n  let _touchZoomDistanceEnd = 0\n\n\n  const _panStart = new THREE.Vector2()\n\n\n  const _panEnd = new THREE.Vector2()\n\n  // for reset\n\n  this.target0 = this.target.clone()\n  this.position0 = this.object.position.clone()\n  this.up0 = this.object.up.clone()\n\n  // events\n\n  const changeEvent = { type: 'change' }\n  const startEvent = { type: 'start' }\n  const endEvent = { type: 'end' }\n\n\n  // methods\n\n  this.handleResize = function () {\n    if (this.domElement === document) {\n      this.screen.left = 0\n      this.screen.top = 0\n      this.screen.width = window.innerWidth\n      this.screen.height = window.innerHeight\n    } else {\n      const box = this.domElement.getBoundingClientRect()\n      // adjustments come from similar code in the jquery offset() function\n      const d = this.domElement.ownerDocument.documentElement\n      this.screen.left = box.left + window.pageXOffset - d.clientLeft\n      this.screen.top = box.top + window.pageYOffset - d.clientTop\n      this.screen.width = box.width\n      this.screen.height = box.height\n    }\n  }\n\n  const getMouseOnScreen = (function () {\n    const vector = new THREE.Vector2()\n\n    return function getMouseOnScreen(pageX, pageY) {\n      vector.set(\n        (pageX - _this.screen.left) / _this.screen.width,\n        (pageY - _this.screen.top) / _this.screen.height,\n      )\n\n      return vector\n    }\n  }())\n\n  const getMouseOnCircle = (function () {\n    const vector = new THREE.Vector2()\n\n    return function getMouseOnCircle(pageX, pageY) {\n      vector.set(\n        ((pageX - _this.screen.width * 0.5 - _this.screen.left) / (_this.screen.width * 0.5)),\n        ((_this.screen.height + 2 * (_this.screen.top - pageY)) / _this.screen.width), // screen.width intentional\n      )\n\n      return vector\n    }\n  }())\n\n  this.rotateCamera = (function () {\n    const axis = new THREE.Vector3()\n\n\n    const quaternion = new THREE.Quaternion()\n\n\n    const eyeDirection = new THREE.Vector3()\n\n\n    const objectUpDirection = new THREE.Vector3()\n\n\n    const objectSidewaysDirection = new THREE.Vector3()\n\n\n    const moveDirection = new THREE.Vector3()\n\n\n    let angle\n\n    return function rotateCamera() {\n      moveDirection.set(_moveCurr.x - _movePrev.x, _moveCurr.y - _movePrev.y, 0)\n      angle = moveDirection.length()\n\n      if (angle) {\n        _eye.copy(_this.object.position).sub(_this.target)\n\n        eyeDirection.copy(_eye).normalize()\n        objectUpDirection.copy(_this.object.up).normalize()\n        objectSidewaysDirection.crossVectors(objectUpDirection, eyeDirection).normalize()\n\n        objectUpDirection.setLength(_moveCurr.y - _movePrev.y)\n        objectSidewaysDirection.setLength(_moveCurr.x - _movePrev.x)\n\n        moveDirection.copy(objectUpDirection.add(objectSidewaysDirection))\n\n        axis.crossVectors(moveDirection, _eye).normalize()\n\n        angle *= _this.rotateSpeed\n        quaternion.setFromAxisAngle(axis, angle)\n\n        _eye.applyQuaternion(quaternion)\n        _this.object.up.applyQuaternion(quaternion)\n\n        _lastAxis.copy(axis)\n        _lastAngle = angle\n      } else if (!_this.staticMoving && _lastAngle) {\n        _lastAngle *= Math.sqrt(1.0 - _this.dynamicDampingFactor)\n        _eye.copy(_this.object.position).sub(_this.target)\n        quaternion.setFromAxisAngle(_lastAxis, _lastAngle)\n        _eye.applyQuaternion(quaternion)\n        _this.object.up.applyQuaternion(quaternion)\n      }\n\n      _movePrev.copy(_moveCurr)\n    }\n  }())\n\n\n  this.zoomCamera = function () {\n    let factor\n\n    if (_state === STATE.TOUCH_ZOOM_PAN) {\n      factor = _touchZoomDistanceStart / _touchZoomDistanceEnd\n      _touchZoomDistanceStart = _touchZoomDistanceEnd\n      _eye.multiplyScalar(factor)\n    } else {\n      factor = 1.0 + (_zoomEnd.y - _zoomStart.y) * _this.zoomSpeed\n\n      if (factor !== 1.0 && factor > 0.0) {\n        _eye.multiplyScalar(factor)\n      }\n\n      if (_this.staticMoving) {\n        _zoomStart.copy(_zoomEnd)\n      } else {\n        _zoomStart.y += (_zoomEnd.y - _zoomStart.y) * this.dynamicDampingFactor\n      }\n    }\n  }\n\n  this.panCamera = (function () {\n    const mouseChange = new THREE.Vector2()\n\n\n    const objectUp = new THREE.Vector3()\n\n\n    const pan = new THREE.Vector3()\n\n    return function panCamera() {\n      mouseChange.copy(_panEnd).sub(_panStart)\n\n      if (mouseChange.lengthSq()) {\n        mouseChange.multiplyScalar(_eye.length() * _this.panSpeed)\n\n        pan.copy(_eye).cross(_this.object.up).setLength(mouseChange.x)\n        pan.add(objectUp.copy(_this.object.up).setLength(mouseChange.y))\n\n        _this.object.position.add(pan)\n        _this.target.add(pan)\n\n        if (_this.staticMoving) {\n          _panStart.copy(_panEnd)\n        } else {\n          _panStart.add(mouseChange.subVectors(_panEnd, _panStart).multiplyScalar(_this.dynamicDampingFactor))\n        }\n      }\n    }\n  }())\n\n  this.checkDistances = function () {\n    if (!_this.noZoom || !_this.noPan) {\n      if (_eye.lengthSq() > _this.maxDistance * _this.maxDistance) {\n        _this.object.position.addVectors(_this.target, _eye.setLength(_this.maxDistance))\n        _zoomStart.copy(_zoomEnd)\n      }\n\n      if (_eye.lengthSq() < _this.minDistance * _this.minDistance) {\n        _this.object.position.addVectors(_this.target, _eye.setLength(_this.minDistance))\n        _zoomStart.copy(_zoomEnd)\n      }\n    }\n  }\n\n  this.update = function () {\n    _eye.subVectors(_this.object.position, _this.target)\n\n    if (!_this.noRotate) {\n      _this.rotateCamera()\n    }\n\n    if (!_this.noZoom) {\n      _this.zoomCamera()\n    }\n\n    if (!_this.noPan) {\n      _this.panCamera()\n    }\n\n    _this.object.position.addVectors(_this.target, _eye)\n\n    _this.checkDistances()\n\n    _this.object.lookAt(_this.target)\n\n    if (lastPosition.distanceToSquared(_this.object.position) > EPS) {\n      _this.dispatchEvent(changeEvent)\n\n      lastPosition.copy(_this.object.position)\n    }\n  }\n\n  this.reset = function () {\n    _state = STATE.NONE\n    _prevState = STATE.NONE\n\n    _this.target.copy(_this.target0)\n    _this.object.position.copy(_this.position0)\n    _this.object.up.copy(_this.up0)\n\n    _eye.subVectors(_this.object.position, _this.target)\n\n    _this.object.lookAt(_this.target)\n\n    _this.dispatchEvent(changeEvent)\n\n    lastPosition.copy(_this.object.position)\n  }\n\n  // listeners\n\n  function keydown(event) {\n    if (_this.enabled === false) return\n\n    window.removeEventListener('keydown', keydown)\n\n    _prevState = _state\n\n    if (_state !== STATE.NONE) {\n      return\n    } if (event.keyCode === _this.keys[STATE.ROTATE] && !_this.noRotate) {\n      _state = STATE.ROTATE\n    } else if (event.keyCode === _this.keys[STATE.ZOOM] && !_this.noZoom) {\n      _state = STATE.ZOOM\n    } else if (event.keyCode === _this.keys[STATE.PAN] && !_this.noPan) {\n      _state = STATE.PAN\n    }\n  }\n\n  function keyup(event) {\n    if (_this.enabled === false) return\n\n    _state = _prevState\n\n    window.addEventListener('keydown', keydown, false)\n  }\n\n  function mousedown(event) {\n    if (_this.enabled === false) return\n\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (_state === STATE.NONE) {\n      _state = event.button\n    }\n\n    if (_state === STATE.ROTATE && !_this.noRotate) {\n      _moveCurr.copy(getMouseOnCircle(event.pageX, event.pageY))\n      _movePrev.copy(_moveCurr)\n    } else if (_state === STATE.ZOOM && !_this.noZoom) {\n      _zoomStart.copy(getMouseOnScreen(event.pageX, event.pageY))\n      _zoomEnd.copy(_zoomStart)\n    } else if (_state === STATE.PAN && !_this.noPan) {\n      _panStart.copy(getMouseOnScreen(event.pageX, event.pageY))\n      _panEnd.copy(_panStart)\n    }\n\n    document.addEventListener('mousemove', mousemove, false)\n    document.addEventListener('mouseup', mouseup, false)\n\n    _this.dispatchEvent(startEvent)\n  }\n\n  function mousemove(event) {\n    if (_this.enabled === false) return\n\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (_state === STATE.ROTATE && !_this.noRotate) {\n      _movePrev.copy(_moveCurr)\n      _moveCurr.copy(getMouseOnCircle(event.pageX, event.pageY))\n    } else if (_state === STATE.ZOOM && !_this.noZoom) {\n      _zoomEnd.copy(getMouseOnScreen(event.pageX, event.pageY))\n    } else if (_state === STATE.PAN && !_this.noPan) {\n      _panEnd.copy(getMouseOnScreen(event.pageX, event.pageY))\n    }\n  }\n\n  function mouseup(event) {\n    if (_this.enabled === false) return\n\n    event.preventDefault()\n    event.stopPropagation()\n\n    _state = STATE.NONE\n\n    document.removeEventListener('mousemove', mousemove)\n    document.removeEventListener('mouseup', mouseup)\n    _this.dispatchEvent(endEvent)\n  }\n\n  function mousewheel(event) {\n    if (_this.enabled === false) return\n\n    if (_this.noZoom === true) return\n\n    event.preventDefault()\n    event.stopPropagation()\n\n    switch (event.deltaMode) {\n      case 2:\n        // Zoom in pages\n        _zoomStart.y -= event.deltaY * 0.025\n        break\n\n      case 1:\n        // Zoom in lines\n        _zoomStart.y -= event.deltaY * 0.01\n        break\n\n      default:\n        // undefined, 0, assume pixels\n        _zoomStart.y -= event.deltaY * 0.00025\n        break\n    }\n\n    _this.dispatchEvent(startEvent)\n    _this.dispatchEvent(endEvent)\n  }\n\n  function touchstart(event) {\n    if (_this.enabled === false) return\n\n    event.preventDefault()\n\n    switch (event.touches.length) {\n      case 1:\n        _state = STATE.TOUCH_ROTATE\n        _moveCurr.copy(getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY))\n        _movePrev.copy(_moveCurr)\n        break\n\n      default: // 2 or more\n        _state = STATE.TOUCH_ZOOM_PAN\n        var dx = event.touches[0].pageX - event.touches[1].pageX\n        var dy = event.touches[0].pageY - event.touches[1].pageY\n        _touchZoomDistanceEnd = _touchZoomDistanceStart = Math.sqrt(dx * dx + dy * dy)\n\n        var x = (event.touches[0].pageX + event.touches[1].pageX) / 2\n        var y = (event.touches[0].pageY + event.touches[1].pageY) / 2\n        _panStart.copy(getMouseOnScreen(x, y))\n        _panEnd.copy(_panStart)\n        break\n    }\n\n    _this.dispatchEvent(startEvent)\n  }\n\n  function touchmove(event) {\n    if (_this.enabled === false) return\n\n    event.preventDefault()\n    event.stopPropagation()\n\n    switch (event.touches.length) {\n      case 1:\n        _movePrev.copy(_moveCurr)\n        _moveCurr.copy(getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY))\n        break\n\n      default: // 2 or more\n        var dx = event.touches[0].pageX - event.touches[1].pageX\n        var dy = event.touches[0].pageY - event.touches[1].pageY\n        _touchZoomDistanceEnd = Math.sqrt(dx * dx + dy * dy)\n\n        var x = (event.touches[0].pageX + event.touches[1].pageX) / 2\n        var y = (event.touches[0].pageY + event.touches[1].pageY) / 2\n        _panEnd.copy(getMouseOnScreen(x, y))\n        break\n    }\n  }\n\n  function touchend(event) {\n    if (_this.enabled === false) return\n\n    switch (event.touches.length) {\n      case 0:\n        _state = STATE.NONE\n        break\n\n      case 1:\n        _state = STATE.TOUCH_ROTATE\n        _moveCurr.copy(getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY))\n        _movePrev.copy(_moveCurr)\n        break\n    }\n\n    _this.dispatchEvent(endEvent)\n  }\n\n  function contextmenu(event) {\n    if (_this.enabled === false) return\n\n    event.preventDefault()\n  }\n\n  this.dispose = function () {\n    this.domElement.removeEventListener('contextmenu', contextmenu, false)\n    this.domElement.removeEventListener('mousedown', mousedown, false)\n    this.domElement.removeEventListener('wheel', mousewheel, false)\n\n    this.domElement.removeEventListener('touchstart', touchstart, false)\n    this.domElement.removeEventListener('touchend', touchend, false)\n    this.domElement.removeEventListener('touchmove', touchmove, false)\n\n    document.removeEventListener('mousemove', mousemove, false)\n    document.removeEventListener('mouseup', mouseup, false)\n\n    window.removeEventListener('keydown', keydown, false)\n    window.removeEventListener('keyup', keyup, false)\n  }\n\n  this.domElement.addEventListener('contextmenu', contextmenu, false)\n  this.domElement.addEventListener('mousedown', mousedown, false)\n  this.domElement.addEventListener('wheel', mousewheel, false)\n\n  this.domElement.addEventListener('touchstart', touchstart, false)\n  this.domElement.addEventListener('touchend', touchend, false)\n  this.domElement.addEventListener('touchmove', touchmove, false)\n\n  window.addEventListener('keydown', keydown, false)\n  window.addEventListener('keyup', keyup, false)\n\n  this.handleResize()\n\n  // force an update at start\n  this.update()\n}\n\n\nTrackballControls.prototype = Object.create(THREE.EventDispatcher.prototype)\n// TrackballControls.prototype.constructor = THREE.TrackballControls;\n\nexport default TrackballControls\n","/*\n* Author   Jonathan Lurie - http://me.jonathanlurie.fr\n* License  MIT\n* Link     https://github.com/Pixpipe/quickvoxelcore\n* Lab      MCIN - Montreal Neurological Institute\n*/\n\n\n/**\n * The EventManager deals with events, create them, call them.\n * This class is mostly for being inherited from.\n */\nclass EventManager {\n  /**\n   * Constructor\n   */\n  constructor() {\n    this._events = {}\n  }\n\n\n  /**\n   * Define an event, with a name associated with a function\n   * @param  {String} eventName - Name to give to the event\n   * @param  {Function} callback - function associated to the even\n   */\n  on(eventName, callback) {\n    if (typeof callback === 'function') {\n      if (!(eventName in this._events)) {\n        this._events[eventName] = []\n      }\n      this._events[eventName].push(callback)\n    } else {\n      console.warn('The callback must be of type Function')\n    }\n  }\n\n\n  emit(eventName, args = []) {\n    // the event must exist and be non null\n    if ((eventName in this._events) && (this._events[eventName].length > 0)) {\n      const events = this._events[eventName]\n      for (let i = 0; i < events.length; i += 1) {\n        events[i](...args)\n      }\n    } else {\n      console.warn(`No function associated to the event ${eventName}`)\n    }\n  }\n}\n\nexport default EventManager\n","const Pass = function () {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen\n\tthis.renderToScreen = false;\n\n};\n\nObject.assign( Pass.prototype, {\n\n\tsetSize: function ( width, height ) {},\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tconsole.error( 'Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\nexport default Pass\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\nimport * as THREE from 'three'\nimport Pass from './Pass'\n\nconst MaskPass = function ( scene, camera ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nMaskPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: MaskPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tvar context = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask( false );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked( true );\n\t\tstate.buffers.depth.setLocked( true );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tstate.buffers.stencil.setTest( true );\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tstate.buffers.stencil.setClear( clearValue );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t// unlock color and depth buffer for subsequent rendering\n\n\t\tstate.buffers.color.setLocked( false );\n\t\tstate.buffers.depth.setLocked( false );\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff );  // draw if == 1\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\n\t}\n\n} );\n\n\nconst ClearMaskPass = function () {\n\n\tPass.call( this );\n\n\tthis.needsSwap = false;\n\n};\n\nClearMaskPass.prototype = Object.create( Pass.prototype );\n\nObject.assign( ClearMaskPass.prototype, {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t}\n\n} );\n\nexport {\n  MaskPass,\n  ClearMaskPass\n}\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport * as THREE from 'three'\nimport Pass from './Pass'\n\nconst ShaderPass = function ( shader, textureID ) {\n\n\tPass.call( this );\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tif ( shader instanceof THREE.ShaderMaterial ) {\n\n\t\tthis.uniforms = shader.uniforms;\n\n\t\tthis.material = shader;\n\n\t} else if ( shader ) {\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\n\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t}\n\n\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tthis.scene = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\tthis.quad.frustumCulled = false; // Avoid getting clipped\n\tthis.scene.add( this.quad );\n\n};\n\nShaderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: ShaderPass,\n\n\trender: function( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.quad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t} else {\n\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t}\n\n\t}\n\n} );\n\nexport default ShaderPass\n","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nconst CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"opacity\":  { value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\"gl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\nexport default CopyShader\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport * as THREE from 'three'\nimport { MaskPass, ClearMaskPass } from './MaskPass'\nimport ShaderPass from './ShaderPass'\nimport CopyShader from './CopyShader'\n\nconst EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar parameters = {\n\t\t\tminFilter: THREE.LinearFilter,\n\t\t\tmagFilter: THREE.LinearFilter,\n\t\t\tformat: THREE.RGBAFormat,\n\t\t\tstencilBuffer: false\n\t\t};\n\n\t\tvar size = renderer.getDrawingBufferSize();\n\t\trenderTarget = new THREE.WebGLRenderTarget( size.width, size.height, parameters );\n\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.passes = [];\n\n\t// dependencies\n\n\tif ( CopyShader === undefined ) {\n\n\t\tconsole.error( 'EffectComposer relies on CopyShader' );\n\n\t}\n\n\tif ( ShaderPass === undefined ) {\n\n\t\tconsole.error( 'EffectComposer relies on ShaderPass' );\n\n\t}\n\n\tthis.copyPass = new ShaderPass( CopyShader );\n\n};\n\nObject.assign( EffectComposer.prototype, {\n\n\tswapBuffers: function () {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\n\t\tvar size = this.renderer.getDrawingBufferSize();\n\t\tpass.setSize( size.width, size.height );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\trender: function ( delta ) {\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.context;\n\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, delta );\n\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n      \n\t\t\tif ( MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tvar size = this.renderer.getDrawingBufferSize();\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( size.width, size.height );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tthis.renderTarget1.setSize( width, height );\n\t\tthis.renderTarget2.setSize( width, height );\n\n\t\tfor ( var i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( width, height );\n\n\t\t}\n\n\t}\n\n} );\n\nexport default EffectComposer\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\nimport * as THREE from 'three'\nimport Pass from './Pass'\n\nconst RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n\n};\n\nRenderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tvar oldClearColor, oldClearAlpha;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.render( this.scene, this.camera, this.renderToScreen ? null : readBuffer, this.clear );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\t\trenderer.autoClear = oldAutoClear;\n\t}\n\n} );\n\nexport default RenderPass\n","/**\n * @author bhouston / http://clara.io/\n *\n * Luminosity\n * http://en.wikipedia.org/wiki/Luminosity\n */\nimport * as THREE from 'three'\n\nconst LuminosityHighPassShader = {\n\n  shaderID: \"luminosityHighPass\",\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\"luminosityThreshold\": { type: \"f\", value: 1.0 },\n\t\t\"smoothWidth\": { type: \"f\", value: 1.0 },\n\t\t\"defaultColor\": { type: \"c\", value: new THREE.Color( 0x000000 ) },\n\t\t\"defaultOpacity\":  { type: \"f\", value: 0.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec3 defaultColor;\",\n\t\t\"uniform float defaultOpacity;\",\n\t\t\"uniform float luminosityThreshold;\",\n\t\t\"uniform float smoothWidth;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\n\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\n\t\t\t\"float v = dot( texel.xyz, luma );\",\n\n\t\t\t\"vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\",\n\n\t\t\t\"float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\",\n\n\t\t\t\"gl_FragColor = mix( outputColor, texel, alpha );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\nexport default LuminosityHighPassShader\n","/**\n * @author spidersharma / http://eduperiment.com/\n *\n * Inspired from Unreal Engine\n * https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\n */\nimport * as THREE from 'three'\nimport LuminosityHighPassShader from './LuminosityHighPassShader'\nimport CopyShader from '../base/CopyShader'\nimport Pass from '../base/Pass'\n\nconst UnrealBloomPass = function ( resolution, strength, radius, threshold ) {\n\n\tPass.call( this );\n\n\tthis.strength = ( strength !== undefined ) ? strength : 1;\n\tthis.radius = radius;\n\tthis.threshold = threshold;\n\tthis.resolution = ( resolution !== undefined ) ? new THREE.Vector2( resolution.x, resolution.y ) : new THREE.Vector2( 256, 256 );\n\n\t// create color only once here, reuse it later inside the render function\n\tthis.clearColor = new THREE.Color( 0, 0, 0 );\n\n\t// render targets\n\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat };\n\tthis.renderTargetsHorizontal = [];\n\tthis.renderTargetsVertical = [];\n\tthis.nMips = 5;\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tthis.renderTargetBright = new THREE.WebGLRenderTarget( resx, resy, pars );\n\tthis.renderTargetBright.texture.name = \"UnrealBloomPass.bright\";\n\tthis.renderTargetBright.texture.generateMipmaps = false;\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tvar renderTargetHorizonal = new THREE.WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetHorizonal.texture.name = \"UnrealBloomPass.h\" + i;\n\t\trenderTargetHorizonal.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsHorizontal.push( renderTargetHorizonal );\n\n\t\tvar renderTargetVertical = new THREE.WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetVertical.texture.name = \"UnrealBloomPass.v\" + i;\n\t\trenderTargetVertical.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsVertical.push( renderTargetVertical );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// luminosity high pass material\n\n\tif ( LuminosityHighPassShader === undefined )\n\t\tconsole.error( \"UnrealBloomPass relies on LuminosityHighPassShader\" );\n\n\tvar highPassShader = LuminosityHighPassShader;\n\tthis.highPassUniforms = THREE.UniformsUtils.clone( highPassShader.uniforms );\n\n\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = threshold;\n\tthis.highPassUniforms[ \"smoothWidth\" ].value = 0.01;\n\n\tthis.materialHighPassFilter = new THREE.ShaderMaterial( {\n\t\tuniforms: this.highPassUniforms,\n\t\tvertexShader: highPassShader.vertexShader,\n\t\tfragmentShader: highPassShader.fragmentShader,\n\t\tdefines: {}\n\t} );\n\n\t// Gaussian Blur Materials\n\tthis.separableBlurMaterials = [];\n\tvar kernelSizeArray = [ 3, 5, 7, 9, 11 ];\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tthis.separableBlurMaterials.push( this.getSeperableBlurMaterial( kernelSizeArray[ i ] ) );\n\n\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new THREE.Vector2( resx, resy );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// Composite material\n\tthis.compositeMaterial = this.getCompositeMaterial( this.nMips );\n\tthis.compositeMaterial.uniforms[ \"blurTexture1\" ].value = this.renderTargetsVertical[ 0 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture2\" ].value = this.renderTargetsVertical[ 1 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture3\" ].value = this.renderTargetsVertical[ 2 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture4\" ].value = this.renderTargetsVertical[ 3 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture5\" ].value = this.renderTargetsVertical[ 4 ].texture;\n\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = strength;\n\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = 0.1;\n\tthis.compositeMaterial.needsUpdate = true;\n\n\tvar bloomFactors = [ 1.0, 0.8, 0.6, 0.4, 0.2 ];\n\tthis.compositeMaterial.uniforms[ \"bloomFactors\" ].value = bloomFactors;\n\tthis.bloomTintColors = [ new THREE.Vector3( 1, 1, 1 ), new THREE.Vector3( 1, 1, 1 ), new THREE.Vector3( 1, 1, 1 ),\n\t\t\t\t\t\t\t new THREE.Vector3( 1, 1, 1 ), new THREE.Vector3( 1, 1, 1 ) ];\n\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\n\n\t// copy material\n\tif ( CopyShader === undefined ) {\n\n\t\tconsole.error( \"THREE.BloomPass relies on CopyShader\" );\n\n\t}\n\n\tvar copyShader = CopyShader;\n\n\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\n\tthis.copyUniforms[ \"opacity\" ].value = 1.0;\n\n\tthis.materialCopy = new THREE.ShaderMaterial( {\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: THREE.AdditiveBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true\n\t} );\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\n\tthis.oldClearColor = new THREE.Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tthis.scene = new THREE.Scene();\n\n\tthis.basic = new THREE.MeshBasicMaterial();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\tthis.quad.frustumCulled = false; // Avoid getting clipped\n\tthis.scene.add( this.quad );\n\n};\n\nUnrealBloomPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: UnrealBloomPass,\n\n\tdispose: function () {\n\n\t\tfor ( var i = 0; i < this.renderTargetsHorizontal.length; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].dispose();\n\n\t\t}\n\n\t\tfor ( var i = 0; i < this.renderTargetsVertical.length; i ++ ) {\n\n\t\t\tthis.renderTargetsVertical[ i ].dispose();\n\n\t\t}\n\n\t\tthis.renderTargetBright.dispose();\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tvar resx = Math.round( width / 2 );\n\t\tvar resy = Math.round( height / 2 );\n\n\t\tthis.renderTargetBright.setSize( resx, resy );\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].setSize( resx, resy );\n\t\t\tthis.renderTargetsVertical[ i ].setSize( resx, resy );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new THREE.Vector2( resx, resy );\n\n\t\t\tresx = Math.round( resx / 2 );\n\t\t\tresy = Math.round( resy / 2 );\n\n\t\t}\n\n\t},\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor( this.clearColor, 0 );\n\n\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\n\n\t\t// Render input to screen\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\tthis.quad.material = this.basic;\n\t\t\tthis.basic.map = readBuffer.texture;\n\n\t\t\trenderer.render( this.scene, this.camera, undefined, true );\n\n\t\t}\n\n\t\t// 1. Extract Bright Areas\n\n\t\tthis.highPassUniforms[ \"tDiffuse\" ].value = readBuffer.texture;\n\t\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = this.threshold;\n\t\tthis.quad.material = this.materialHighPassFilter;\n\n\t\trenderer.render( this.scene, this.camera, this.renderTargetBright, true );\n\n\t\t// 2. Blur All the mips progressively\n\n\t\tvar inputRenderTarget = this.renderTargetBright;\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.quad.material = this.separableBlurMaterials[ i ];\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = inputRenderTarget.texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = UnrealBloomPass.BlurDirectionX;\n\t\t\trenderer.render( this.scene, this.camera, this.renderTargetsHorizontal[ i ], true );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = this.renderTargetsHorizontal[ i ].texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = UnrealBloomPass.BlurDirectionY;\n\t\t\trenderer.render( this.scene, this.camera, this.renderTargetsVertical[ i ], true );\n\n\t\t\tinputRenderTarget = this.renderTargetsVertical[ i ];\n\n\t\t}\n\n\t\t// Composite All the mips\n\n\t\tthis.quad.material = this.compositeMaterial;\n\t\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = this.strength;\n\t\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = this.radius;\n\t\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\n\n\t\trenderer.render( this.scene, this.camera, this.renderTargetsHorizontal[ 0 ], true );\n\n\t\t// Blend it additively over the input texture\n\n\t\tthis.quad.material = this.materialCopy;\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetsHorizontal[ 0 ].texture;\n\n\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\n\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.render( this.scene, this.camera, undefined, false );\n\n\t\t} else {\n\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, false );\n\n\t\t}\n\n\t\t// Restore renderer settings\n\n\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t},\n\n\tgetSeperableBlurMaterial: function ( kernelRadius ) {\n\n\t\treturn new THREE.ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"KERNEL_RADIUS\": kernelRadius,\n\t\t\t\t\"SIGMA\": kernelRadius\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"colorTexture\": { value: null },\n\t\t\t\t\"texSize\": { value: new THREE.Vector2( 0.5, 0.5 ) },\n\t\t\t\t\"direction\": { value: new THREE.Vector2( 0.5, 0.5 ) }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"#include <common>\\\n\t\t\t\tvarying vec2 vUv;\\n\\\n\t\t\t\tuniform sampler2D colorTexture;\\n\\\n\t\t\t\tuniform vec2 texSize;\\\n\t\t\t\tuniform vec2 direction;\\\n\t\t\t\t\\\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\\\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\\n\t\t\t\t}\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\\\n\t\t\t\t\tfloat fSigma = float(SIGMA);\\\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\\\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\n\t\t\t\t\t\tfloat x = float(i);\\\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\\\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\\\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\\\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\\\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\\\n\t\t\t\t\t\tweightSum += 2.0 * w;\\\n\t\t\t\t\t}\\\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\\n\\\n\t\t\t\t}\"\n\t\t} );\n\n\t},\n\n\tgetCompositeMaterial: function ( nMips ) {\n\n\t\treturn new THREE.ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"NUM_MIPS\": nMips\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"blurTexture1\": { value: null },\n\t\t\t\t\"blurTexture2\": { value: null },\n\t\t\t\t\"blurTexture3\": { value: null },\n\t\t\t\t\"blurTexture4\": { value: null },\n\t\t\t\t\"blurTexture5\": { value: null },\n\t\t\t\t\"dirtTexture\": { value: null },\n\t\t\t\t\"bloomStrength\": { value: 1.0 },\n\t\t\t\t\"bloomFactors\": { value: null },\n\t\t\t\t\"bloomTintColors\": { value: null },\n\t\t\t\t\"bloomRadius\": { value: 0.0 }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"varying vec2 vUv;\\\n\t\t\t\tuniform sampler2D blurTexture1;\\\n\t\t\t\tuniform sampler2D blurTexture2;\\\n\t\t\t\tuniform sampler2D blurTexture3;\\\n\t\t\t\tuniform sampler2D blurTexture4;\\\n\t\t\t\tuniform sampler2D blurTexture5;\\\n\t\t\t\tuniform sampler2D dirtTexture;\\\n\t\t\t\tuniform float bloomStrength;\\\n\t\t\t\tuniform float bloomRadius;\\\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\\\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\\\n\t\t\t\t\\\n\t\t\t\tfloat lerpBloomFactor(const in float factor) { \\\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\\\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\\\n\t\t\t\t}\\\n\t\t\t\t\\\n\t\t\t\tvoid main() {\\\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\\n\t\t\t\t}\"\n\t\t} );\n\n\t}\n\n} );\n\nUnrealBloomPass.BlurDirectionX = new THREE.Vector2( 1.0, 0.0 );\nUnrealBloomPass.BlurDirectionY = new THREE.Vector2( 0.0, 1.0 );\n\nexport default UnrealBloomPass;\n","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Luminosity\n * http://en.wikipedia.org/wiki/Luminosity\n */\n\nconst LuminosityShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"#include <common>\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\n\t\t\t\"float l = linearToRelativeLuminance( texel.rgb );\",\n\n\t\t\t\"gl_FragColor = vec4( l, l, l, texel.w );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\nexport default LuminosityShader\n","/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Sobel Edge Detection (see https://youtu.be/uihBwtPIBxM)\n *\n * As mentioned in the video the Sobel operator expects a grayscale image as input.\n *\n */\n\nimport * as THREE from 'three'\n\nconst SobelOperatorShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"resolution\": { value: new THREE.Vector2() }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec2 resolution;\",\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec2 texel = vec2( 1.0 / resolution.x, 1.0 / resolution.y );\",\n\n\t\t\t// kernel definition (in glsl matrices are filled in column-major order)\n\n\t\t\t\"const mat3 Gx = mat3( -1, -2, -1, 0, 0, 0, 1, 2, 1 );\", // x direction kernel\n\t\t\t\"const mat3 Gy = mat3( -1, 0, 1, -2, 0, 2, -1, 0, 1 );\", // y direction kernel\n\n\t\t\t// fetch the 3x3 neighbourhood of a fragment\n\n\t\t\t// first column\n\n\t\t\t\"float tx0y0 = texture2D( tDiffuse, vUv + texel * vec2( -1, -1 ) ).r;\",\n\t\t\t\"float tx0y1 = texture2D( tDiffuse, vUv + texel * vec2( -1,  0 ) ).r;\",\n\t\t\t\"float tx0y2 = texture2D( tDiffuse, vUv + texel * vec2( -1,  1 ) ).r;\",\n\n\t\t\t// second column\n\n\t\t\t\"float tx1y0 = texture2D( tDiffuse, vUv + texel * vec2(  0, -1 ) ).r;\",\n\t\t\t\"float tx1y1 = texture2D( tDiffuse, vUv + texel * vec2(  0,  0 ) ).r;\",\n\t\t\t\"float tx1y2 = texture2D( tDiffuse, vUv + texel * vec2(  0,  1 ) ).r;\",\n\n\t\t\t// third column\n\n\t\t\t\"float tx2y0 = texture2D( tDiffuse, vUv + texel * vec2(  1, -1 ) ).r;\",\n\t\t\t\"float tx2y1 = texture2D( tDiffuse, vUv + texel * vec2(  1,  0 ) ).r;\",\n\t\t\t\"float tx2y2 = texture2D( tDiffuse, vUv + texel * vec2(  1,  1 ) ).r;\",\n\n\t\t\t// gradient value in x direction\n\n\t\t\t\"float valueGx = Gx[0][0] * tx0y0 + Gx[1][0] * tx1y0 + Gx[2][0] * tx2y0 + \",\n\t\t\t\t\"Gx[0][1] * tx0y1 + Gx[1][1] * tx1y1 + Gx[2][1] * tx2y1 + \",\n\t\t\t\t\"Gx[0][2] * tx0y2 + Gx[1][2] * tx1y2 + Gx[2][2] * tx2y2; \",\n\n\t\t\t// gradient value in y direction\n\n\t\t\t\"float valueGy = Gy[0][0] * tx0y0 + Gy[1][0] * tx1y0 + Gy[2][0] * tx2y0 + \",\n\t\t\t\t\"Gy[0][1] * tx0y1 + Gy[1][1] * tx1y1 + Gy[2][1] * tx2y1 + \",\n\t\t\t\t\"Gy[0][2] * tx0y2 + Gy[1][2] * tx1y2 + Gy[2][2] * tx2y2; \",\n\n\t\t\t// magnitute of the total gradient\n\n\t\t\t\"float G = sqrt( ( valueGx * valueGx ) + ( valueGy * valueGy ) );\",\n\n\t\t\t\"gl_FragColor = vec4( vec3( G ), 1 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\nexport default SobelOperatorShader\n","\n const NoChange = {\n\n  uniforms: {\n    \"tDiffuse\": { type: \"t\", value: null }\n  },\n\n  vertexShader: [\n\n  \"varying vec2 vUv;\",\n  \"void main() {\",\n    \"vUv = uv;\",\n    \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n  \"}\"\n\n  ].join(\"\\n\"),\n\n  fragmentShader: `\n\n  uniform sampler2D tDiffuse;\n  varying vec2 vUv;\n\n  void main() {\n\n    vec4 color = texture2D(tDiffuse, vUv);\n    gl_FragColor = color;\n\n  }\n\n\n  `.trim()\n\n};\n\nexport default NoChange\n","/**\n * @author wongbryan / http://wongbryan.github.io\n *\n * Pixelation shader\n */\n\nconst PixelShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"resolution\": { value: null },\n\t\t\"pixelSize\": { value: 1. },\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying highp vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"vUv = uv;\",\n\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform float pixelSize;\",\n\t\t\"uniform vec2 resolution;\",\n\n\t\t\"varying highp vec2 vUv;\",\n\n\t\t\"void main(){\",\n\n\t\t\"vec2 dxy = pixelSize / resolution;\",\n\t\t\"vec2 coord = dxy * floor( vUv / dxy );\",\n\t\t\"gl_FragColor = texture2D(tDiffuse, coord);\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n};\n\nexport default PixelShader\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author davidedc / http://www.sketchpatch.net/\n *\n * NVIDIA FXAA by Timothy Lottes\n * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\n * - WebGL port by @supereggbert\n * http://www.glge.org/demos/fxaa/\n */\nimport * as THREE from 'three'\n\nconst FXAAShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\":   { value: null },\n\t\t\"resolution\": { value: new THREE.Vector2( 1 / 1024, 1 / 512 ) }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n        \"precision highp float;\",\n        \"\",\n        \"uniform sampler2D tDiffuse;\",\n        \"\",\n        \"uniform vec2 resolution;\",\n        \"\",\n        \"varying vec2 vUv;\",\n        \"\",\n        \"// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)\",\n        \"\",\n        \"//----------------------------------------------------------------------------------\",\n        \"// File:        es3-kepler\\FXAA\\assets\\shaders/FXAA_DefaultES.frag\",\n        \"// SDK Version: v3.00\",\n        \"// Email:       gameworks@nvidia.com\",\n        \"// Site:        http://developer.nvidia.com/\",\n        \"//\",\n        \"// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.\",\n        \"//\",\n        \"// Redistribution and use in source and binary forms, with or without\",\n        \"// modification, are permitted provided that the following conditions\",\n        \"// are met:\",\n        \"//  * Redistributions of source code must retain the above copyright\",\n        \"//    notice, this list of conditions and the following disclaimer.\",\n        \"//  * Redistributions in binary form must reproduce the above copyright\",\n        \"//    notice, this list of conditions and the following disclaimer in the\",\n        \"//    documentation and/or other materials provided with the distribution.\",\n        \"//  * Neither the name of NVIDIA CORPORATION nor the names of its\",\n        \"//    contributors may be used to endorse or promote products derived\",\n        \"//    from this software without specific prior written permission.\",\n        \"//\",\n        \"// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\",\n        \"// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\",\n        \"// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\",\n        \"// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\",\n        \"// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\",\n        \"// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\",\n        \"// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\",\n        \"// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\",\n        \"// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\",\n        \"// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\",\n        \"// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\",\n        \"//\",\n        \"//----------------------------------------------------------------------------------\",\n        \"\",\n        \"#define FXAA_PC 1\",\n        \"#define FXAA_GLSL_100 1\",\n        \"#define FXAA_QUALITY_PRESET 12\",\n        \"\",\n        \"#define FXAA_GREEN_AS_LUMA 1\",\n        \"\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_PC_CONSOLE\",\n        \"    //\",\n        \"    // The console algorithm for PC is included\",\n        \"    // for developers targeting really low spec machines.\",\n        \"    // Likely better to just run FXAA_PC, and use a really low preset.\",\n        \"    //\",\n        \"    #define FXAA_PC_CONSOLE 0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_GLSL_120\",\n        \"    #define FXAA_GLSL_120 0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_GLSL_130\",\n        \"    #define FXAA_GLSL_130 0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_HLSL_3\",\n        \"    #define FXAA_HLSL_3 0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_HLSL_4\",\n        \"    #define FXAA_HLSL_4 0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_HLSL_5\",\n        \"    #define FXAA_HLSL_5 0\",\n        \"#endif\",\n        \"/*==========================================================================*/\",\n        \"#ifndef FXAA_GREEN_AS_LUMA\",\n        \"    //\",\n        \"    // For those using non-linear color,\",\n        \"    // and either not able to get luma in alpha, or not wanting to,\",\n        \"    // this enables FXAA to run using green as a proxy for luma.\",\n        \"    // So with this enabled, no need to pack luma in alpha.\",\n        \"    //\",\n        \"    // This will turn off AA on anything which lacks some amount of green.\",\n        \"    // Pure red and blue or combination of only R and B, will get no AA.\",\n        \"    //\",\n        \"    // Might want to lower the settings for both,\",\n        \"    //    fxaaConsoleEdgeThresholdMin\",\n        \"    //    fxaaQualityEdgeThresholdMin\",\n        \"    // In order to insure AA does not get turned off on colors\",\n        \"    // which contain a minor amount of green.\",\n        \"    //\",\n        \"    // 1 = On.\",\n        \"    // 0 = Off.\",\n        \"    //\",\n        \"    #define FXAA_GREEN_AS_LUMA 0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_EARLY_EXIT\",\n        \"    //\",\n        \"    // Controls algorithm's early exit path.\",\n        \"    // On PS3 turning this ON adds 2 cycles to the shader.\",\n        \"    // On 360 turning this OFF adds 10ths of a millisecond to the shader.\",\n        \"    // Turning this off on console will result in a more blurry image.\",\n        \"    // So this defaults to on.\",\n        \"    //\",\n        \"    // 1 = On.\",\n        \"    // 0 = Off.\",\n        \"    //\",\n        \"    #define FXAA_EARLY_EXIT 1\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_DISCARD\",\n        \"    //\",\n        \"    // Only valid for PC OpenGL currently.\",\n        \"    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.\",\n        \"    //\",\n        \"    // 1 = Use discard on pixels which don't need AA.\",\n        \"    //     For APIs which enable concurrent TEX+ROP from same surface.\",\n        \"    // 0 = Return unchanged color on pixels which don't need AA.\",\n        \"    //\",\n        \"    #define FXAA_DISCARD 0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_FAST_PIXEL_OFFSET\",\n        \"    //\",\n        \"    // Used for GLSL 120 only.\",\n        \"    //\",\n        \"    // 1 = GL API supports fast pixel offsets\",\n        \"    // 0 = do not use fast pixel offsets\",\n        \"    //\",\n        \"    #ifdef GL_EXT_gpu_shader4\",\n        \"        #define FXAA_FAST_PIXEL_OFFSET 1\",\n        \"    #endif\",\n        \"    #ifdef GL_NV_gpu_shader5\",\n        \"        #define FXAA_FAST_PIXEL_OFFSET 1\",\n        \"    #endif\",\n        \"    #ifdef GL_ARB_gpu_shader5\",\n        \"        #define FXAA_FAST_PIXEL_OFFSET 1\",\n        \"    #endif\",\n        \"    #ifndef FXAA_FAST_PIXEL_OFFSET\",\n        \"        #define FXAA_FAST_PIXEL_OFFSET 0\",\n        \"    #endif\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_GATHER4_ALPHA\",\n        \"    //\",\n        \"    // 1 = API supports gather4 on alpha channel.\",\n        \"    // 0 = API does not support gather4 on alpha channel.\",\n        \"    //\",\n        \"    #if (FXAA_HLSL_5 == 1)\",\n        \"        #define FXAA_GATHER4_ALPHA 1\",\n        \"    #endif\",\n        \"    #ifdef GL_ARB_gpu_shader5\",\n        \"        #define FXAA_GATHER4_ALPHA 1\",\n        \"    #endif\",\n        \"    #ifdef GL_NV_gpu_shader5\",\n        \"        #define FXAA_GATHER4_ALPHA 1\",\n        \"    #endif\",\n        \"    #ifndef FXAA_GATHER4_ALPHA\",\n        \"        #define FXAA_GATHER4_ALPHA 0\",\n        \"    #endif\",\n        \"#endif\",\n        \"\",\n        \"\",\n        \"/*============================================================================\",\n        \"                        FXAA QUALITY - TUNING KNOBS\",\n        \"------------------------------------------------------------------------------\",\n        \"NOTE the other tuning knobs are now in the shader function inputs!\",\n        \"============================================================================*/\",\n        \"#ifndef FXAA_QUALITY_PRESET\",\n        \"    //\",\n        \"    // Choose the quality preset.\",\n        \"    // This needs to be compiled into the shader as it effects code.\",\n        \"    // Best option to include multiple presets is to\",\n        \"    // in each shader define the preset, then include this file.\",\n        \"    //\",\n        \"    // OPTIONS\",\n        \"    // -----------------------------------------------------------------------\",\n        \"    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)\",\n        \"    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)\",\n        \"    // 39       - no dither, very expensive\",\n        \"    //\",\n        \"    // NOTES\",\n        \"    // -----------------------------------------------------------------------\",\n        \"    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)\",\n        \"    // 13 = about same speed as FXAA 3.9 and better than 12\",\n        \"    // 23 = closest to FXAA 3.9 visually and performance wise\",\n        \"    //  _ = the lowest digit is directly related to performance\",\n        \"    // _  = the highest digit is directly related to style\",\n        \"    //\",\n        \"    #define FXAA_QUALITY_PRESET 12\",\n        \"#endif\",\n        \"\",\n        \"\",\n        \"/*============================================================================\",\n        \"\",\n        \"                           FXAA QUALITY - PRESETS\",\n        \"\",\n        \"============================================================================*/\",\n        \"\",\n        \"/*============================================================================\",\n        \"                     FXAA QUALITY - MEDIUM DITHER PRESETS\",\n        \"============================================================================*/\",\n        \"#if (FXAA_QUALITY_PRESET == 10)\",\n        \"    #define FXAA_QUALITY_PS 3\",\n        \"    #define FXAA_QUALITY_P0 1.5\",\n        \"    #define FXAA_QUALITY_P1 3.0\",\n        \"    #define FXAA_QUALITY_P2 12.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 11)\",\n        \"    #define FXAA_QUALITY_PS 4\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 3.0\",\n        \"    #define FXAA_QUALITY_P3 12.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 12)\",\n        \"    #define FXAA_QUALITY_PS 5\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 4.0\",\n        \"    #define FXAA_QUALITY_P4 12.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 13)\",\n        \"    #define FXAA_QUALITY_PS 6\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 4.0\",\n        \"    #define FXAA_QUALITY_P5 12.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 14)\",\n        \"    #define FXAA_QUALITY_PS 7\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 4.0\",\n        \"    #define FXAA_QUALITY_P6 12.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 15)\",\n        \"    #define FXAA_QUALITY_PS 8\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 2.0\",\n        \"    #define FXAA_QUALITY_P6 4.0\",\n        \"    #define FXAA_QUALITY_P7 12.0\",\n        \"#endif\",\n        \"\",\n        \"/*============================================================================\",\n        \"                     FXAA QUALITY - LOW DITHER PRESETS\",\n        \"============================================================================*/\",\n        \"#if (FXAA_QUALITY_PRESET == 20)\",\n        \"    #define FXAA_QUALITY_PS 3\",\n        \"    #define FXAA_QUALITY_P0 1.5\",\n        \"    #define FXAA_QUALITY_P1 2.0\",\n        \"    #define FXAA_QUALITY_P2 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 21)\",\n        \"    #define FXAA_QUALITY_PS 4\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 22)\",\n        \"    #define FXAA_QUALITY_PS 5\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 23)\",\n        \"    #define FXAA_QUALITY_PS 6\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 24)\",\n        \"    #define FXAA_QUALITY_PS 7\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 3.0\",\n        \"    #define FXAA_QUALITY_P6 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 25)\",\n        \"    #define FXAA_QUALITY_PS 8\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 2.0\",\n        \"    #define FXAA_QUALITY_P6 4.0\",\n        \"    #define FXAA_QUALITY_P7 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 26)\",\n        \"    #define FXAA_QUALITY_PS 9\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 2.0\",\n        \"    #define FXAA_QUALITY_P6 2.0\",\n        \"    #define FXAA_QUALITY_P7 4.0\",\n        \"    #define FXAA_QUALITY_P8 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 27)\",\n        \"    #define FXAA_QUALITY_PS 10\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 2.0\",\n        \"    #define FXAA_QUALITY_P6 2.0\",\n        \"    #define FXAA_QUALITY_P7 2.0\",\n        \"    #define FXAA_QUALITY_P8 4.0\",\n        \"    #define FXAA_QUALITY_P9 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 28)\",\n        \"    #define FXAA_QUALITY_PS 11\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 2.0\",\n        \"    #define FXAA_QUALITY_P6 2.0\",\n        \"    #define FXAA_QUALITY_P7 2.0\",\n        \"    #define FXAA_QUALITY_P8 2.0\",\n        \"    #define FXAA_QUALITY_P9 4.0\",\n        \"    #define FXAA_QUALITY_P10 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 29)\",\n        \"    #define FXAA_QUALITY_PS 12\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 2.0\",\n        \"    #define FXAA_QUALITY_P6 2.0\",\n        \"    #define FXAA_QUALITY_P7 2.0\",\n        \"    #define FXAA_QUALITY_P8 2.0\",\n        \"    #define FXAA_QUALITY_P9 2.0\",\n        \"    #define FXAA_QUALITY_P10 4.0\",\n        \"    #define FXAA_QUALITY_P11 8.0\",\n        \"#endif\",\n        \"\",\n        \"/*============================================================================\",\n        \"                     FXAA QUALITY - EXTREME QUALITY\",\n        \"============================================================================*/\",\n        \"#if (FXAA_QUALITY_PRESET == 39)\",\n        \"    #define FXAA_QUALITY_PS 12\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.0\",\n        \"    #define FXAA_QUALITY_P2 1.0\",\n        \"    #define FXAA_QUALITY_P3 1.0\",\n        \"    #define FXAA_QUALITY_P4 1.0\",\n        \"    #define FXAA_QUALITY_P5 1.5\",\n        \"    #define FXAA_QUALITY_P6 2.0\",\n        \"    #define FXAA_QUALITY_P7 2.0\",\n        \"    #define FXAA_QUALITY_P8 2.0\",\n        \"    #define FXAA_QUALITY_P9 2.0\",\n        \"    #define FXAA_QUALITY_P10 4.0\",\n        \"    #define FXAA_QUALITY_P11 8.0\",\n        \"#endif\",\n        \"\",\n        \"\",\n        \"\",\n        \"/*============================================================================\",\n        \"\",\n        \"                                API PORTING\",\n        \"\",\n        \"============================================================================*/\",\n        \"#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)\",\n        \"    #define FxaaBool bool\",\n        \"    #define FxaaDiscard discard\",\n        \"    #define FxaaFloat float\",\n        \"    #define FxaaFloat2 vec2\",\n        \"    #define FxaaFloat3 vec3\",\n        \"    #define FxaaFloat4 vec4\",\n        \"    #define FxaaHalf float\",\n        \"    #define FxaaHalf2 vec2\",\n        \"    #define FxaaHalf3 vec3\",\n        \"    #define FxaaHalf4 vec4\",\n        \"    #define FxaaInt2 ivec2\",\n        \"    #define FxaaSat(x) clamp(x, 0.0, 1.0)\",\n        \"    #define FxaaTex sampler2D\",\n        \"#else\",\n        \"    #define FxaaBool bool\",\n        \"    #define FxaaDiscard clip(-1)\",\n        \"    #define FxaaFloat float\",\n        \"    #define FxaaFloat2 float2\",\n        \"    #define FxaaFloat3 float3\",\n        \"    #define FxaaFloat4 float4\",\n        \"    #define FxaaHalf half\",\n        \"    #define FxaaHalf2 half2\",\n        \"    #define FxaaHalf3 half3\",\n        \"    #define FxaaHalf4 half4\",\n        \"    #define FxaaSat(x) saturate(x)\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_GLSL_100 == 1)\",\n        \"  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)\",\n        \"  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_GLSL_120 == 1)\",\n        \"    // Requires,\",\n        \"    //  #version 120\",\n        \"    // And at least,\",\n        \"    //  #extension GL_EXT_gpu_shader4 : enable\",\n        \"    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)\",\n        \"    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)\",\n        \"    #if (FXAA_FAST_PIXEL_OFFSET == 1)\",\n        \"        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)\",\n        \"    #else\",\n        \"        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)\",\n        \"    #endif\",\n        \"    #if (FXAA_GATHER4_ALPHA == 1)\",\n        \"        // use #extension GL_ARB_gpu_shader5 : enable\",\n        \"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\n        \"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\n        \"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\n        \"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\n        \"    #endif\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_GLSL_130 == 1)\",\n        \"    // Requires \\\"#version 130\\\" or better\",\n        \"    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)\",\n        \"    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)\",\n        \"    #if (FXAA_GATHER4_ALPHA == 1)\",\n        \"        // use #extension GL_ARB_gpu_shader5 : enable\",\n        \"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\n        \"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\n        \"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\n        \"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\n        \"    #endif\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_HLSL_3 == 1)\",\n        \"    #define FxaaInt2 float2\",\n        \"    #define FxaaTex sampler2D\",\n        \"    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))\",\n        \"    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_HLSL_4 == 1)\",\n        \"    #define FxaaInt2 int2\",\n        \"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\n        \"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\n        \"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_HLSL_5 == 1)\",\n        \"    #define FxaaInt2 int2\",\n        \"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\n        \"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\n        \"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\n        \"    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)\",\n        \"    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)\",\n        \"    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)\",\n        \"    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)\",\n        \"#endif\",\n        \"\",\n        \"\",\n        \"/*============================================================================\",\n        \"                   GREEN AS LUMA OPTION SUPPORT FUNCTION\",\n        \"============================================================================*/\",\n        \"#if (FXAA_GREEN_AS_LUMA == 0)\",\n        \"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }\",\n        \"#else\",\n        \"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }\",\n        \"#endif\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"/*============================================================================\",\n        \"\",\n        \"                             FXAA3 QUALITY - PC\",\n        \"\",\n        \"============================================================================*/\",\n        \"#if (FXAA_PC == 1)\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"FxaaFloat4 FxaaPixelShader(\",\n        \"    //\",\n        \"    // Use noperspective interpolation here (turn off perspective interpolation).\",\n        \"    // {xy} = center of pixel\",\n        \"    FxaaFloat2 pos,\",\n        \"    //\",\n        \"    // Used only for FXAA Console, and not used on the 360 version.\",\n        \"    // Use noperspective interpolation here (turn off perspective interpolation).\",\n        \"    // {xy_} = upper left of pixel\",\n        \"    // {_zw} = lower right of pixel\",\n        \"    FxaaFloat4 fxaaConsolePosPos,\",\n        \"    //\",\n        \"    // Input color texture.\",\n        \"    // {rgb_} = color in linear or perceptual color space\",\n        \"    // if (FXAA_GREEN_AS_LUMA == 0)\",\n        \"    //     {__a} = luma in perceptual color space (not linear)\",\n        \"    FxaaTex tex,\",\n        \"    //\",\n        \"    // Only used on the optimized 360 version of FXAA Console.\",\n        \"    // For everything but 360, just use the same input here as for \\\"tex\\\".\",\n        \"    // For 360, same texture, just alias with a 2nd sampler.\",\n        \"    // This sampler needs to have an exponent bias of -1.\",\n        \"    FxaaTex fxaaConsole360TexExpBiasNegOne,\",\n        \"    //\",\n        \"    // Only used on the optimized 360 version of FXAA Console.\",\n        \"    // For everything but 360, just use the same input here as for \\\"tex\\\".\",\n        \"    // For 360, same texture, just alias with a 3nd sampler.\",\n        \"    // This sampler needs to have an exponent bias of -2.\",\n        \"    FxaaTex fxaaConsole360TexExpBiasNegTwo,\",\n        \"    //\",\n        \"    // Only used on FXAA Quality.\",\n        \"    // This must be from a constant/uniform.\",\n        \"    // {x_} = 1.0/screenWidthInPixels\",\n        \"    // {_y} = 1.0/screenHeightInPixels\",\n        \"    FxaaFloat2 fxaaQualityRcpFrame,\",\n        \"    //\",\n        \"    // Only used on FXAA Console.\",\n        \"    // This must be from a constant/uniform.\",\n        \"    // This effects sub-pixel AA quality and inversely sharpness.\",\n        \"    //   Where N ranges between,\",\n        \"    //     N = 0.50 (default)\",\n        \"    //     N = 0.33 (sharper)\",\n        \"    // {x__} = -N/screenWidthInPixels\",\n        \"    // {_y_} = -N/screenHeightInPixels\",\n        \"    // {_z_} =  N/screenWidthInPixels\",\n        \"    // {__w} =  N/screenHeightInPixels\",\n        \"    FxaaFloat4 fxaaConsoleRcpFrameOpt,\",\n        \"    //\",\n        \"    // Only used on FXAA Console.\",\n        \"    // Not used on 360, but used on PS3 and PC.\",\n        \"    // This must be from a constant/uniform.\",\n        \"    // {x__} = -2.0/screenWidthInPixels\",\n        \"    // {_y_} = -2.0/screenHeightInPixels\",\n        \"    // {_z_} =  2.0/screenWidthInPixels\",\n        \"    // {__w} =  2.0/screenHeightInPixels\",\n        \"    FxaaFloat4 fxaaConsoleRcpFrameOpt2,\",\n        \"    //\",\n        \"    // Only used on FXAA Console.\",\n        \"    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.\",\n        \"    // This must be from a constant/uniform.\",\n        \"    // {x__} =  8.0/screenWidthInPixels\",\n        \"    // {_y_} =  8.0/screenHeightInPixels\",\n        \"    // {_z_} = -4.0/screenWidthInPixels\",\n        \"    // {__w} = -4.0/screenHeightInPixels\",\n        \"    FxaaFloat4 fxaaConsole360RcpFrameOpt2,\",\n        \"    //\",\n        \"    // Only used on FXAA Quality.\",\n        \"    // This used to be the FXAA_QUALITY_SUBPIX define.\",\n        \"    // It is here now to allow easier tuning.\",\n        \"    // Choose the amount of sub-pixel aliasing removal.\",\n        \"    // This can effect sharpness.\",\n        \"    //   1.00 - upper limit (softer)\",\n        \"    //   0.75 - default amount of filtering\",\n        \"    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)\",\n        \"    //   0.25 - almost off\",\n        \"    //   0.00 - completely off\",\n        \"    FxaaFloat fxaaQualitySubpix,\",\n        \"    //\",\n        \"    // Only used on FXAA Quality.\",\n        \"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.\",\n        \"    // It is here now to allow easier tuning.\",\n        \"    // The minimum amount of local contrast required to apply algorithm.\",\n        \"    //   0.333 - too little (faster)\",\n        \"    //   0.250 - low quality\",\n        \"    //   0.166 - default\",\n        \"    //   0.125 - high quality\",\n        \"    //   0.063 - overkill (slower)\",\n        \"    FxaaFloat fxaaQualityEdgeThreshold,\",\n        \"    //\",\n        \"    // Only used on FXAA Quality.\",\n        \"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.\",\n        \"    // It is here now to allow easier tuning.\",\n        \"    // Trims the algorithm from processing darks.\",\n        \"    //   0.0833 - upper limit (default, the start of visible unfiltered edges)\",\n        \"    //   0.0625 - high quality (faster)\",\n        \"    //   0.0312 - visible limit (slower)\",\n        \"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\n        \"    //   Likely want to set this to zero.\",\n        \"    //   As colors that are mostly not-green\",\n        \"    //   will appear very dark in the green channel!\",\n        \"    //   Tune by looking at mostly non-green content,\",\n        \"    //   then start at zero and increase until aliasing is a problem.\",\n        \"    FxaaFloat fxaaQualityEdgeThresholdMin,\",\n        \"    //\",\n        \"    // Only used on FXAA Console.\",\n        \"    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.\",\n        \"    // It is here now to allow easier tuning.\",\n        \"    // This does not effect PS3, as this needs to be compiled in.\",\n        \"    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.\",\n        \"    //   Due to the PS3 being ALU bound,\",\n        \"    //   there are only three safe values here: 2 and 4 and 8.\",\n        \"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\n        \"    // For all other platforms can be a non-power of two.\",\n        \"    //   8.0 is sharper (default!!!)\",\n        \"    //   4.0 is softer\",\n        \"    //   2.0 is really soft (good only for vector graphics inputs)\",\n        \"    FxaaFloat fxaaConsoleEdgeSharpness,\",\n        \"    //\",\n        \"    // Only used on FXAA Console.\",\n        \"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.\",\n        \"    // It is here now to allow easier tuning.\",\n        \"    // This does not effect PS3, as this needs to be compiled in.\",\n        \"    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.\",\n        \"    //   Due to the PS3 being ALU bound,\",\n        \"    //   there are only two safe values here: 1/4 and 1/8.\",\n        \"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\n        \"    // The console setting has a different mapping than the quality setting.\",\n        \"    // Other platforms can use other values.\",\n        \"    //   0.125 leaves less aliasing, but is softer (default!!!)\",\n        \"    //   0.25 leaves more aliasing, and is sharper\",\n        \"    FxaaFloat fxaaConsoleEdgeThreshold,\",\n        \"    //\",\n        \"    // Only used on FXAA Console.\",\n        \"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.\",\n        \"    // It is here now to allow easier tuning.\",\n        \"    // Trims the algorithm from processing darks.\",\n        \"    // The console setting has a different mapping than the quality setting.\",\n        \"    // This only applies when FXAA_EARLY_EXIT is 1.\",\n        \"    // This does not apply to PS3,\",\n        \"    // PS3 was simplified to avoid more shader instructions.\",\n        \"    //   0.06 - faster but more aliasing in darks\",\n        \"    //   0.05 - default\",\n        \"    //   0.04 - slower and less aliasing in darks\",\n        \"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\n        \"    //   Likely want to set this to zero.\",\n        \"    //   As colors that are mostly not-green\",\n        \"    //   will appear very dark in the green channel!\",\n        \"    //   Tune by looking at mostly non-green content,\",\n        \"    //   then start at zero and increase until aliasing is a problem.\",\n        \"    FxaaFloat fxaaConsoleEdgeThresholdMin,\",\n        \"    //\",\n        \"    // Extra constants for 360 FXAA Console only.\",\n        \"    // Use zeros or anything else for other platforms.\",\n        \"    // These must be in physical constant registers and NOT immediates.\",\n        \"    // Immediates will result in compiler un-optimizing.\",\n        \"    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)\",\n        \"    FxaaFloat4 fxaaConsole360ConstDir\",\n        \") {\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat2 posM;\",\n        \"    posM.x = pos.x;\",\n        \"    posM.y = pos.y;\",\n        \"    #if (FXAA_GATHER4_ALPHA == 1)\",\n        \"        #if (FXAA_DISCARD == 0)\",\n        \"            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\n        \"            #if (FXAA_GREEN_AS_LUMA == 0)\",\n        \"                #define lumaM rgbyM.w\",\n        \"            #else\",\n        \"                #define lumaM rgbyM.y\",\n        \"            #endif\",\n        \"        #endif\",\n        \"        #if (FXAA_GREEN_AS_LUMA == 0)\",\n        \"            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);\",\n        \"            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));\",\n        \"        #else\",\n        \"            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);\",\n        \"            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));\",\n        \"        #endif\",\n        \"        #if (FXAA_DISCARD == 1)\",\n        \"            #define lumaM luma4A.w\",\n        \"        #endif\",\n        \"        #define lumaE luma4A.z\",\n        \"        #define lumaS luma4A.x\",\n        \"        #define lumaSE luma4A.y\",\n        \"        #define lumaNW luma4B.w\",\n        \"        #define lumaN luma4B.z\",\n        \"        #define lumaW luma4B.x\",\n        \"    #else\",\n        \"        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\n        \"        #if (FXAA_GREEN_AS_LUMA == 0)\",\n        \"            #define lumaM rgbyM.w\",\n        \"        #else\",\n        \"            #define lumaM rgbyM.y\",\n        \"        #endif\",\n        \"        #if (FXAA_GLSL_100 == 1)\",\n        \"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));\",\n        \"        #else\",\n        \"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));\",\n        \"        #endif\",\n        \"    #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat maxSM = max(lumaS, lumaM);\",\n        \"    FxaaFloat minSM = min(lumaS, lumaM);\",\n        \"    FxaaFloat maxESM = max(lumaE, maxSM);\",\n        \"    FxaaFloat minESM = min(lumaE, minSM);\",\n        \"    FxaaFloat maxWN = max(lumaN, lumaW);\",\n        \"    FxaaFloat minWN = min(lumaN, lumaW);\",\n        \"    FxaaFloat rangeMax = max(maxWN, maxESM);\",\n        \"    FxaaFloat rangeMin = min(minWN, minESM);\",\n        \"    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;\",\n        \"    FxaaFloat range = rangeMax - rangeMin;\",\n        \"    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);\",\n        \"    FxaaBool earlyExit = range < rangeMaxClamped;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    if(earlyExit)\",\n        \"        #if (FXAA_DISCARD == 1)\",\n        \"            FxaaDiscard;\",\n        \"        #else\",\n        \"            return rgbyM;\",\n        \"        #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    #if (FXAA_GATHER4_ALPHA == 0)\",\n        \"        #if (FXAA_GLSL_100 == 1)\",\n        \"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));\",\n        \"        #else\",\n        \"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\n        \"        #endif\",\n        \"    #else\",\n        \"        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));\",\n        \"        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\n        \"    #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat lumaNS = lumaN + lumaS;\",\n        \"    FxaaFloat lumaWE = lumaW + lumaE;\",\n        \"    FxaaFloat subpixRcpRange = 1.0/range;\",\n        \"    FxaaFloat subpixNSWE = lumaNS + lumaWE;\",\n        \"    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;\",\n        \"    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat lumaNESE = lumaNE + lumaSE;\",\n        \"    FxaaFloat lumaNWNE = lumaNW + lumaNE;\",\n        \"    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\",\n        \"    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat lumaNWSW = lumaNW + lumaSW;\",\n        \"    FxaaFloat lumaSWSE = lumaSW + lumaSE;\",\n        \"    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\",\n        \"    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\",\n        \"    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\",\n        \"    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\",\n        \"    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;\",\n        \"    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;\",\n        \"    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;\",\n        \"    FxaaBool horzSpan = edgeHorz >= edgeVert;\",\n        \"    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    if(!horzSpan) lumaN = lumaW;\",\n        \"    if(!horzSpan) lumaS = lumaE;\",\n        \"    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;\",\n        \"    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat gradientN = lumaN - lumaM;\",\n        \"    FxaaFloat gradientS = lumaS - lumaM;\",\n        \"    FxaaFloat lumaNN = lumaN + lumaM;\",\n        \"    FxaaFloat lumaSS = lumaS + lumaM;\",\n        \"    FxaaBool pairN = abs(gradientN) >= abs(gradientS);\",\n        \"    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));\",\n        \"    if(pairN) lengthSign = -lengthSign;\",\n        \"    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat2 posB;\",\n        \"    posB.x = posM.x;\",\n        \"    posB.y = posM.y;\",\n        \"    FxaaFloat2 offNP;\",\n        \"    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\",\n        \"    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\",\n        \"    if(!horzSpan) posB.x += lengthSign * 0.5;\",\n        \"    if( horzSpan) posB.y += lengthSign * 0.5;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat2 posN;\",\n        \"    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;\",\n        \"    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;\",\n        \"    FxaaFloat2 posP;\",\n        \"    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;\",\n        \"    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;\",\n        \"    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;\",\n        \"    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));\",\n        \"    FxaaFloat subpixE = subpixC * subpixC;\",\n        \"    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    if(!pairN) lumaNN = lumaSS;\",\n        \"    FxaaFloat gradientScaled = gradient * 1.0/4.0;\",\n        \"    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;\",\n        \"    FxaaFloat subpixF = subpixD * subpixE;\",\n        \"    FxaaBool lumaMLTZero = lumaMM < 0.0;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    lumaEndN -= lumaNN * 0.5;\",\n        \"    lumaEndP -= lumaNN * 0.5;\",\n        \"    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;\",\n        \"    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;\",\n        \"    FxaaBool doneNP = (!doneN) || (!doneP);\",\n        \"    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;\",\n        \"    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    if(doneNP) {\",\n        \"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"        doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"        doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;\",\n        \"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;\",\n        \"        doneNP = (!doneN) || (!doneP);\",\n        \"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;\",\n        \"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"        #if (FXAA_QUALITY_PS > 3)\",\n        \"        if(doneNP) {\",\n        \"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"            doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"            doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;\",\n        \"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;\",\n        \"            doneNP = (!doneN) || (!doneP);\",\n        \"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;\",\n        \"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"            #if (FXAA_QUALITY_PS > 4)\",\n        \"            if(doneNP) {\",\n        \"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"                doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"                doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;\",\n        \"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;\",\n        \"                doneNP = (!doneN) || (!doneP);\",\n        \"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;\",\n        \"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                #if (FXAA_QUALITY_PS > 5)\",\n        \"                if(doneNP) {\",\n        \"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"                    doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"                    doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;\",\n        \"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;\",\n        \"                    doneNP = (!doneN) || (!doneP);\",\n        \"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;\",\n        \"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                    #if (FXAA_QUALITY_PS > 6)\",\n        \"                    if(doneNP) {\",\n        \"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"                        doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"                        doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;\",\n        \"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;\",\n        \"                        doneNP = (!doneN) || (!doneP);\",\n        \"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;\",\n        \"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                        #if (FXAA_QUALITY_PS > 7)\",\n        \"                        if(doneNP) {\",\n        \"                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"                            doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"                            doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;\",\n        \"                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;\",\n        \"                            doneNP = (!doneN) || (!doneP);\",\n        \"                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;\",\n        \"                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    #if (FXAA_QUALITY_PS > 8)\",\n        \"    if(doneNP) {\",\n        \"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"        doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"        doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;\",\n        \"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;\",\n        \"        doneNP = (!doneN) || (!doneP);\",\n        \"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;\",\n        \"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"        #if (FXAA_QUALITY_PS > 9)\",\n        \"        if(doneNP) {\",\n        \"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"            doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"            doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;\",\n        \"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;\",\n        \"            doneNP = (!doneN) || (!doneP);\",\n        \"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;\",\n        \"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"            #if (FXAA_QUALITY_PS > 10)\",\n        \"            if(doneNP) {\",\n        \"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"                doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"                doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;\",\n        \"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;\",\n        \"                doneNP = (!doneN) || (!doneP);\",\n        \"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;\",\n        \"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                #if (FXAA_QUALITY_PS > 11)\",\n        \"                if(doneNP) {\",\n        \"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"                    doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"                    doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;\",\n        \"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;\",\n        \"                    doneNP = (!doneN) || (!doneP);\",\n        \"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;\",\n        \"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                    #if (FXAA_QUALITY_PS > 12)\",\n        \"                    if(doneNP) {\",\n        \"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"                        doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"                        doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;\",\n        \"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;\",\n        \"                        doneNP = (!doneN) || (!doneP);\",\n        \"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;\",\n        \"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                    }\",\n        \"                    #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                }\",\n        \"                #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"            }\",\n        \"            #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"        }\",\n        \"        #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    }\",\n        \"    #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                        }\",\n        \"                        #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                    }\",\n        \"                    #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                }\",\n        \"                #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"            }\",\n        \"            #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"        }\",\n        \"        #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    }\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat dstN = posM.x - posN.x;\",\n        \"    FxaaFloat dstP = posP.x - posM.x;\",\n        \"    if(!horzSpan) dstN = posM.y - posN.y;\",\n        \"    if(!horzSpan) dstP = posP.y - posM.y;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\",\n        \"    FxaaFloat spanLength = (dstP + dstN);\",\n        \"    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\",\n        \"    FxaaFloat spanLengthRcp = 1.0/spanLength;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaBool directionN = dstN < dstP;\",\n        \"    FxaaFloat dst = min(dstN, dstP);\",\n        \"    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;\",\n        \"    FxaaFloat subpixG = subpixF * subpixF;\",\n        \"    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\",\n        \"    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\",\n        \"    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\",\n        \"    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;\",\n        \"    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;\",\n        \"    #if (FXAA_DISCARD == 1)\",\n        \"        return FxaaTexTop(tex, posM);\",\n        \"    #else\",\n        \"        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);\",\n        \"    #endif\",\n        \"}\",\n        \"/*==========================================================================*/\",\n        \"#endif\",\n        \"\",\n        \"void main() {\",\n        \"  gl_FragColor = FxaaPixelShader(\",\n        \"    vUv,\",\n        \"    vec4(0.0),\",\n        \"    tDiffuse,\",\n        \"    tDiffuse,\",\n        \"    tDiffuse,\",\n        \"    resolution,\",\n        \"    vec4(0.0),\",\n        \"    vec4(0.0),\",\n        \"    vec4(0.0),\",\n        \"    0.75,\",\n        \"    0.166,\",\n        \"    0.0833,\",\n        \"    0.0,\",\n        \"    0.0,\",\n        \"    0.0,\",\n        \"    vec4(0.0)\",\n        \"  );\",\n        \"\",\n        \"  // TODO avoid querying texture twice for same texel\",\n        \"  gl_FragColor.a = texture2D(tDiffuse, vUv).a;\",\n        \"}\"\n\t].join(\"\\n\")\n\n};\n\nexport default FXAAShader\n","\n\nconst BlurShader = {\n\n  uniforms: {\n    \"tDiffuse\": { type: \"t\", value: null },\n    \"resolution\": { value: null },\n  },\n\n  vertexShader: `\n\n    varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }\n\n  `.trim(),\n\n  fragmentShader:\n\n  `\n    uniform vec2 resolution;\n    uniform sampler2D tDiffuse;\n    varying vec2 vUv;\n\n\n    vec4 blur(sampler2D image, vec2 uv, vec2 resolution) {\n      float texSizeX = 1. / resolution.x;\n      float texSizeY = 1. / resolution.y;\n      vec4 color = vec4(0.0);\n      //color += texture2D(image, uv);\n//      color += texture2D(image, uv + vec2(texSizeY, 0.));\n\n      const int halfKernelSize = 5;\n\n\n      for(int i=-halfKernelSize;i<=halfKernelSize;i++){\n        for(int j=-halfKernelSize;j<=halfKernelSize;j++){\n          color += texture2D(image, uv + vec2(float(i)*texSizeX, float(j)*texSizeY));\n        }\n      }\n\n      color = color / 100.;\n\n      return color;\n    }\n\n    void main() {\n\n      vec4 color = blur(tDiffuse, vUv, resolution);\n\n      //vec4 color = texture2D(tDiffuse, vUv);\n      gl_FragColor = color;\n\n    }\n\n  `.trim()\n\n};\n\nexport default BlurShader\n","\n\nconst BlurShader = {\n\n  uniforms: {\n    \"tDiffuse\": { type: \"t\", value: null },\n    \"resolution\": { value: null },\n  },\n\n  vertexShader: `\n\n    varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }\n\n  `.trim(),\n\n  fragmentShader:\n\n  `\n    uniform vec2 resolution;\n    uniform sampler2D tDiffuse;\n    varying vec2 vUv;\n\n\n    float rand(vec2 co){\n      return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    }\n\n    void main() {\n      float randWeight = (rand(vUv) - 0.5) * 0.5 ;\n\n      vec4 textureColor = texture2D(tDiffuse, vUv);\n\n      vec4 color = textureColor - randWeight;\n      //gl_FragColor = color;\n\n      float randWeight2 = rand(vUv);\n      gl_FragColor = vec4(randWeight2, randWeight2, randWeight2, 1.);\n\n    }\n\n  `.trim()\n\n};\n\nexport default BlurShader\n","\n\nconst BlurShader = {\n\n  uniforms: {\n    \"tDiffuse\": { type: \"t\", value: null },\n    \"resolution\": { value: null },\n    \"clock\": { value: 0.0}\n  },\n\n  vertexShader: `\n\n    varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }\n\n  `.trim(),\n\n  fragmentShader:\n\n  `\n    uniform vec2 resolution;\n    uniform float clock;\n    uniform sampler2D tDiffuse;\n    varying vec2 vUv;\n\n    float rand(vec2 co){\n      return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    }\n\n    vec4 blur(sampler2D image, vec2 uv, vec2 resolution) {\n      float texSizeX = 1. / resolution.x;\n      float texSizeY = 1. / resolution.y;\n      vec4 color = vec4(0., 0., 0., 0.);\n      //vec4 color = texture2D(image, uv);\n\n      float d = 16.;\n      const int nbSamples = 20;\n\n      for(int i=0;i<nbSamples;i++){\n        float randomDeltaX = texSizeX * rand( uv * (float(i) + 1. * clock) ) * d - (d*0.5) * texSizeX;\n        float randomDeltaY = texSizeY * rand( uv * (float(i) + 2. * clock) ) * d - (d*0.5) * texSizeY;\n        color += texture2D(image, uv + vec2(randomDeltaX, randomDeltaY));\n      }\n\n      color = color / float(nbSamples);\n\n      return color;\n    }\n\n\n    void main() {\n      vec4 originalColor = texture2D(tDiffuse, vUv);\n      vec4 bluredColor = blur(tDiffuse, vUv, resolution) * 3.;\n      gl_FragColor = originalColor + bluredColor;\n    }\n\n  `.trim()\n\n};\n\nexport default BlurShader\n","import * as THREE from 'three'\nimport TrackballControls from './thirdparty/TrackballControls'\n// import Tools from './Tools'\nimport EventManager from './EventManager'\n\n// common for postprocessing\nimport EffectComposer from './postprocessing/base/EffectComposer'\nimport RenderPass from './postprocessing/base/RenderPass'\nimport ShaderPass from './postprocessing/base/ShaderPass'\n\n// specific postprocessing for Bloom\nimport UnrealBloomPass from './postprocessing/unrealBloom/UnrealBloomPass'\n\n// specific for postprocessing Sobel\nimport LuminosityShader from './postprocessing/sobel/LuminosityShader'\nimport SobelOperatorShader from './postprocessing/sobel/SobelOperatorShader'\n\n// specific for the noChange shader (test)\nimport NoChange from './postprocessing/noChange/NoChange'\n\n// specific for the PixelShader\nimport PixelShader from './postprocessing/PixelShader/PixelShader'\n\n// specific for FXAA (antialiasing)\nimport FXAAShader from './postprocessing/FXAA/FXAAShader'\n\n// blur 1\nimport BlurShader from './postprocessing/blur/BlurShader'\n\n// noise\nimport NoiseShader from './postprocessing/noise/NoiseShader'\n\n// blur random\nimport BlurRandomShader from './postprocessing/blurRandom/BlurRandomShader'\n\n\n/**\n * ThreeContext creates a WebGL context using THREEjs. It also handle mouse control.\n * An event can be associated to a ThreeContext instance: `onRaycast` with the method\n * `.on(\"onRaycast\", function(s){...})` where `s` is the section object being raycasted.\n */\nexport class ThreeContext extends EventManager {\n  /**\n   * @param {DONObject} divObj - the div object as a DOM element.\n   * Will be used to host the WebGL context\n   * created by THREE\n   */\n  constructor(divObj = null) {\n    super()\n    const that = this\n\n    if (!divObj) {\n      console.error('The ThreeContext needs a div object')\n      return\n    }\n\n    this._divObj = divObj\n    this._clock = 1\n    this._requestFrameId = null\n\n    // init camera\n    this._camera = new THREE.PerspectiveCamera(27, divObj.clientWidth / divObj.clientHeight, 1, 10000)\n    this._camera.position.z = 500\n\n\n    // init scene\n    this._scene = new THREE.Scene()\n    this._scene.add(new THREE.AmbientLight(0x444444))\n\n    // let axesHelper = new THREE.AxesHelper( 1000 )\n    // this._scene.add( axesHelper )\n\n    // adding some light\n    const light1 = new THREE.DirectionalLight(0xffffff, 0.8)\n    // light1.position.set(0, 1000, 0)\n    // adding the light to the camera ensure a constant lightin of the model\n    this._scene.add(this._camera)\n    this._camera.add(light1)\n\n    this._renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true, preserveDrawingBuffer: true })\n    this._renderer.setClearColor(0xffffff, 0)\n    this._renderer.setPixelRatio(window.devicePixelRatio)\n    this._renderer.setSize(divObj.clientWidth, divObj.clientHeight)\n    this._renderer.gammaInput = true\n    this._renderer.gammaOutput = true\n    divObj.appendChild(this._renderer.domElement)\n\n    // Necessqry for bloom\n    this._composer = new EffectComposer( this._renderer )\n    this._composer.setSize( divObj.clientWidth, divObj.clientHeight )\n\n    let renderScene = new RenderPass( this._scene, this._camera )\n    this._composer.addPass( renderScene )\n\n    // Adding some postprocessings:\n    // A. UnrealBloom\n    //this.addBloom()\n\n    // B. Sobel operator\n    //this.addSobel()\n\n    // C. NoChange\n    //this.addNoChange()\n\n    // D. PixelShader\n    //this.addPixelShader()\n\n    // E. Add antialiasing FXAA\n    // this.addFXAA()\n\n    // F. BlurShader\n    this.addBlur()\n\n    // G. Noise\n    // this.addNoise()\n\n    // H. Blur Random\n    //this.addBlurRandom()\n\n\n    // all the necessary for raycasting\n    this._raycaster = new THREE.Raycaster()\n    this._raycastMouse = new THREE.Vector2()\n\n    function onMouseMove(event) {\n      const elem = that._renderer.domElement\n      const rect = elem.getBoundingClientRect()\n      const relX = event.clientX - rect.left\n      const relY = event.clientY - rect.top\n      that._raycastMouse.x = (relX / that._renderer.domElement.clientWidth) * 2 - 1\n      that._raycastMouse.y = -(relY / that._renderer.domElement.clientHeight) * 2 + 1\n    }\n\n    this._renderer.domElement.addEventListener('mousemove', onMouseMove, false)\n    this._renderer.domElement.addEventListener('dblclick', () => {\n      this._performRaycast()\n    }, false)\n\n    // mouse controls\n    this._controls = new TrackballControls(this._camera, this._renderer.domElement)\n    this._controls.rotateSpeed = 3\n    //this._controls.addEventListener('change', this._render.bind(this))\n\n    window.addEventListener('resize', () => {\n      that._camera.aspect = divObj.clientWidth / divObj.clientHeight\n      that._camera.updateProjectionMatrix()\n      that._renderer.setSize(divObj.clientWidth, divObj.clientHeight)\n      that._composer.setSize(divObj.clientWidth, divObj.clientHeight)\n      that._controls.handleResize()\n      //that._render()\n      that._composer.render()\n    }, false)\n\n    //this._render()\n    this._animate()\n  }\n\n\n  addBloom() {\n    let params = {\n        exposure: 1,\n        bloomStrength: 1.5,\n        bloomThreshold: 0,\n        bloomRadius: 0\n      }\n\n    let bloomPass = new UnrealBloomPass( new THREE.Vector2( this._divObj.clientWidth, this._divObj.clientHeight ), 1.5, 0.4, 0.85 )\n    bloomPass.renderToScreen = true\n    bloomPass.threshold = params.bloomThreshold\n    bloomPass.strength = params.bloomStrength\n    bloomPass.radius = params.bloomRadius\n    console.log(bloomPass)\n\n    this._composer.addPass( bloomPass )\n  }\n\n\n  addSobel() {\n    let effectGrayScale = new ShaderPass( LuminosityShader )\n    this._composer.addPass( effectGrayScale )\n\n    let effectSobel = new ShaderPass( SobelOperatorShader );\n    effectSobel.renderToScreen = true;\n    effectSobel.uniforms.resolution.value.x = window.innerWidth;\n    effectSobel.uniforms.resolution.value.y = window.innerHeight;\n    this._composer.addPass( effectSobel );\n  }\n\n\n  addNoChange() {\n    let noChange = new ShaderPass( NoChange )\n    noChange.renderToScreen = true\n    this._composer.addPass( noChange )\n  }\n\n  addPixelShader() {\n    let pixelPass = new ShaderPass( PixelShader )\n    pixelPass.uniforms.resolution.value = new THREE.Vector2( this._divObj.clientWidth, this._divObj.clientHeight )\n    pixelPass.uniforms.resolution.value.multiplyScalar( window.devicePixelRatio )\n    pixelPass.renderToScreen = true\n    pixelPass.uniforms.pixelSize.value = 10\n    this._composer.addPass( pixelPass )\n  }\n\n  // NOT WORKING\n  addFXAA() {\n    let fxaaPass = new ShaderPass( FXAAShader )\n    fxaaPass.uniforms.resolution.value.x = 1 / this._divObj.clientWidth\n    fxaaPass.uniforms.resolution.value.y = 1 / this._divObj.clientHeight\n    fxaaPass.renderToScreen = true\n    this._composer.addPass( fxaaPass )\n\n  }\n\n\n  addBlur() {\n    let blurPass = new ShaderPass( BlurShader )\n    blurPass.uniforms.resolution.value = new THREE.Vector2( this._divObj.clientWidth, this._divObj.clientHeight )\n    blurPass.renderToScreen = true\n    this._composer.addPass( blurPass )\n  }\n\n\n  addNoise() {\n    let noisePass = new ShaderPass( NoiseShader )\n    noisePass.uniforms.resolution.value = new THREE.Vector2( this._divObj.clientWidth, this._divObj.clientHeight )\n    noisePass.renderToScreen = true\n    this._composer.addPass( noisePass )\n  }\n\n\n  addBlurRandom() {\n    let blurRandomPass = new ShaderPass( BlurRandomShader )\n    blurRandomPass.uniforms.resolution.value = new THREE.Vector2( this._divObj.clientWidth, this._divObj.clientHeight )\n    blurRandomPass.renderToScreen = true\n    this._composer.addPass( blurRandomPass )\n\n    this.blurRandomPass = blurRandomPass\n  }\n\n\n  /**\n   * Adds a Thorus knot to the scene\n   */\n  addSampleShape() {\n    const geometry = new THREE.TorusKnotBufferGeometry(10, 3, 100, 16)\n    const material = new THREE.MeshPhongMaterial({\n      color: Math.ceil(Math.random() * 0xffff00),\n      //wireframeLinewidth: 12,\n      wireframe: true\n    })\n    const torusKnot = new THREE.Mesh(geometry, material)\n    this._scene.add(torusKnot)\n    this._render()\n  }\n\n\n  /**\n   * Get the scene object\n   * @return {THREE.Scene}\n   */\n  getScene() {\n    return this._scene\n  }\n\n\n  /**\n   * Get the field of view angle of the camera, in degrees\n   * @return {Number}\n   */\n  getCameraFieldOfView() {\n    return this._camera.fov\n  }\n\n\n  /**\n   * Define the camera field of view, in degrees\n   * @param {Number} fov - the fov\n   */\n  setCameraFieldOfView(fov) {\n    this._camera.fov = fov\n    this._camera.updateProjectionMatrix()\n    this._render()\n  }\n\n\n  /**\n   * @private\n   * deals with rendering and updating the controls\n   */\n  _animate() {\n    if (\"blurRandomPass\" in this) {\n      this.blurRandomPass.uniforms.clock.value = this._clock\n    }\n\n\n    this._requestFrameId = requestAnimationFrame(this._animate.bind(this))\n    this._controls.update()\n    this._render()\n    // this._clock ++\n  }\n\n\n  /**\n   * @private\n   * Render the scene\n   */\n  _render() {\n    //this._renderer.render(this._scene, this._camera)\n    this._composer.render()\n  }\n\n\n  /**\n   * @private\n   * Throw a ray from the camera to the pointer, potentially intersect some sections.\n   * If so, emit the event `onRaycast` with the section instance as argument\n   */\n  _performRaycast() {\n    // update the picking ray with the camera and mouse position\n    this._raycaster.setFromCamera(this._raycastMouse, this._camera)\n\n    // calculate objects intersecting the picking ray\n    const intersects = this._raycaster.intersectObjects(this._scene.children, true)\n\n    if (intersects.length) {\n      this.emit('onRaycast', intersects)\n    }\n  }\n\n\n  /**\n   * Get the png image data as base64, in order to later, export as a file\n   */\n  getSnapshotData() {\n    const strMime = 'image/png'\n    // let strDownloadMime = \"image/octet-stream\"\n    const imgData = this._renderer.domElement.toDataURL(strMime)\n    // imgData.replace(strMime, strDownloadMime)\n    return imgData\n  }\n\n\n  /**\n   * Kills the scene, interaction, animation and reset all objects to null\n   */\n  destroy() {\n    this._controls.dispose()\n    cancelAnimationFrame(this._requestFrameId)\n    this._camera = null\n    this._controls = null\n    this._scene = null\n    this._renderer.domElement.remove()\n    this._renderer = null\n  }\n}\n\nexport default ThreeContext\n","import ThreeContext from './ThreeContext'\n\nexport default ({\n  ThreeContext,\n})\n"],"names":["THREE.Vector3","THREE.Vector2","THREE.Quaternion","THREE.EventDispatcher","THREE.ShaderMaterial","THREE.UniformsUtils","THREE.OrthographicCamera","THREE.Scene","THREE.Mesh","THREE.PlaneBufferGeometry","THREE.LinearFilter","THREE.RGBAFormat","THREE.WebGLRenderTarget","THREE.Color","THREE.AdditiveBlending","THREE.MeshBasicMaterial","BlurShader","THREE.PerspectiveCamera","THREE.AmbientLight","THREE.DirectionalLight","THREE.WebGLRenderer","THREE.Raycaster","NoiseShader","BlurRandomShader","THREE.TorusKnotBufferGeometry","THREE.MeshPhongMaterial"],"mappings":"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"}